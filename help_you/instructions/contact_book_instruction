"create_contact NAME" - Створює контакт з іменем NAME.
Приклад: create_contact Stas
У разі успішного виконання команди повертає:
>>>"Contact with name {name} successfully created."
У разі виникнення помилки, що контакт з цим ім'ям існує:
"Note with name '{name} already exist."
-----
"show_contact_book" - Показує всі контакти які є в КонтактнійКнизі зі всією інформацією про кожен контакт.
Приклад: show_contact_book
У разі успішного виконання повертає всі контакти у форматі
    Name: Stas
    phones: [x, y, s]
    emails: [x, y, s]
    address: [x, y, x]
    birthday: 25.06.1992
-----
"show_contact NAME" - Показує контакт, який має ім'я NAME. Всю інформацію що мається в цьому контакті.
Приклад: show_contact Stas
У разі успішного виконання повертає:
    Name: Stas
    phones: [x, y, s]
    emails: [x, y, s]
    address: [x, y, x]
    birthday: 25.06.1992
У разі якщо контакт з цим іменем не знайдено:
>>>'Contact {name} is not founded'
-----
"show_contact_page INT" - Виводить одну або кілька сторінок контактної книги. Кожна сторінка відображує певну кількість контактів і ця кількість
дорівнює INT. Якщо контактів у книзі менше або дорівнює INT - відобразить всі контакти однією сторінкою
Приклад: show_contacts_page 5
У разі успішного виконання повертає:
>>>Списки які містять П'ЯТЬ контактів в собі кожен.
Якщо INT при вводі не буде цілим числом виведе:
>>>Повідомлення про невідповідність введеної інформації до потрібного формату
-----
"clear_contact_book" - Очистить контактну книгу, видалить всі контакти.
Приклад: clear_contact_book
Має питати чи впевнені Ви, що хочете видалити всі контакти? Y/N
У разі успішного виконання повертає:
>>>'Contacts book now clean'
-----
"delete_contact NAME": - Видаляє контакт який має ім'я NAME
Приклад: delete_contact Stas
У разі успішного виконання повертає:
>>>"Contact {name} is deleted"
У разі відсутності контакту з таким ім'ям повертає:
>>>"Contact {name} is not in book"
-----
"add_to_contact NAME FIELD VALUE" - Додає у контакт який має ім'я NAME інформацію VALUE у поле FIELD
Відповідність полей і приклади значень які вони приймають:
FIELD phones - номера телефонів (+380661112233). Саме з кодом країни загальною довжиною 12 цифр і тринадцятий символ це +
FIELD emails - імейли (aaaa.ssss@ddddd.com). Імейл може складатися з букв латинського алфавіту, цифр і символів ".-_" до знаку "собака", і лише
з буков і символу крапки "." після "собаки". остання група букв має бути НЕ меншою за ТРИ символи поспіль.
FIELD addresses - адреси ("Kharkov, Ivanova str, 40/32"). Особливих вимог не має. Зберігається як звичайний текст.
FIELD birthday - день народження(2222.12.25). Приймає данні у форматі рррр.мм.дд
Приклад: add_to_contact Stas emails aaa.ssss@ddddd.com
У разі успішного виконання повертає:
>>>"Phone {new_phone.value} successfully added to contact {self.name.value}"
-----
"edit_contact NAME COMMAND FIELD OLD_VALUE NEW_VALUE" - Заміню OLD_VALUE на NEW_VALUE для контакту NAME у полі FIELD
COMMAND може приймати два значення. Або change, або del. У разі, якщо обрана команда del - значення NEW_VALUE вводити не треба
FIELD phones - номера телефонів (+380661112233). Саме з кодом країни загальною довжиною 12 цифр і тринадцятий символ це +
FIELD emails - імейли (aaaa.ssss@ddddd.com). Імейл може складатися з букв латинського алфавіту, цифр і символів ".-_" до знаку "собака", і лише
з буков і символу крапки "." після "собаки". остання група букв має бути НЕ меншою за ТРИ символи поспіль.
FIELD addresses - адреси ("Kharkov, Ivanova str, 40/32"). Особливих вимог не має. Зберігається як звичайний текст.
FIELD birthday - день народження(2222.12.25). Приймає данні у форматі рррр.мм.дд
Приклад: edit_contact Stas change phones +380501112233 +380667778899
        edit_contact Stas del phones +380501112233
У разі успішного виконання повертає:
>>>"{old} successfully changed to {new}"
>>>"{old} successfully deleted from {field}"
-----
"edit_contact_name OLD_NAME NEW_NAME" - Змінює ім'я контакту OLD_NAME на нове ім'я NEW_NAME
Приклад: edit_contact_name Stas Dima
У разі успішного виконання повертає:
>>>"{name}'s name has been changed to {new_name}"
-----
"search_in_contacts VALUE" - Проводить пошук у всіх полях всіх контактів згадки рядку VALUE
Приклад: search_in_contacts aaa.ssss@dddd.com - буде шукати всі контакти в яких зустрічається цей імейл і повертати ВЕСЬ контакт. Шукати буде у ВСІХ
полях, а не лише у імейл
У разі успішного виконання повертатиме:
>>>Список знайдених співпадінь
-----
"show_nearest_birthdays INT" - Показує контакти у яких день народження протягом найближчих INT днів.
Приклад: show_birthdays 5
У разі успішного виконання поверне:
>>>Список контактів з повною інформацією у яких ДН протягом найближчих 5 днів
-----
"days_to_birthday_for_one NAME" - Показує скільки днів залишилося до ДН контакту який має ім'я NAME
Приклад: days_to_birthday Dima
У разі успішного виконання поверне:
"Days to birthday for {name} = days"
-----
"show_days_to_birthday_for_all" - Поверне кількість днів до ДН для всіх контактів
Приклад: show_days_to_birthday_for_all
У разі успішного виконання поверне:
    Список який міститиме в собі ось такий рядок про кожен контакт:
    "Days to Stas's birthday: 228"
