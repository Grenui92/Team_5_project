"create_note NAME TEXT" - Створює нотатку з іменем NAME. І заповнює її текстом TEXT. У TEXT можна відмічати слова символом # і тоді ці слова будуть
    додані в теги цієї нотатки. Вони будуть скопійовані і залишаться також у тексті.
Приклад: create_note New I want to #buy new #car.
    NAME = New
    TEXT = I want to #buy new #car
    tags = #buy #car
У разі успішного виконання повертає:
>>>"Note with name {name} successfully created."
-----
"show_note_book" - Показує всі нотатки які присутні у Книзі
Приклад: show_note_book
У разі успішного виконання повертає:
    Список Нотаток у такому форматі
        Note Name: New
        Note Tags: #buy #car
        Note Text: I want to #buy new #car
-----
"show_note NAME" - Показує одну нотатку яка має ім'я NAME
Приклад: show_note New
У разі успішного виконання поверне:
    Нотаток у такому форматі
        Note Name: New
        Note Tags: #buy #car
        Note Text: I want to #buy new #car
-----
"show_note_page INT" - Виводить одну або кілька сторінок книги нотаток. Кожна сторінка відображує певну кількість нотаток і ця кількість
дорівнює INT. Якщо нотаток у книзі менше або дорівнює INT - відобразить всі нотатки однією сторінкою
Приклад: show_note_page 5
У разі успішного виконання повертає:
>>>Списки які містять П'ЯТЬ нотаток в собі кожен.
-----
"clear_note_book" - Очистить книгу нотаток, видалить всі нотатки.
Приклад: clear_note_book
Має питати чи впевнені Ви, що хочете видалити всі нотатки? Y/N
У разі успішного виконання повертає:
>>>"Note book now clean"
-----
"delete_note NAME" - Видаляє нотатку яка має ім'я NAME
Приклад: delete_note New
У разі успішного виконання повертає:
>>>"Note {name} is deleted"
-----
"add_to_note NAME TEXT" - Додає інформацію TEXT до нотатки яка має ім'я NAME. У TEXT можна відмічати слова символом # і тоді ці слова будуть
додані в теги цієї нотатки. Вони будуть скопійовані і залишаться також у тексті.
Приклад: add_to_note New or maybe i want to #buy a #house
    Tags = old_tags + (#buy, #house)
    Text = old_text + or maybe i want to #buy a #house
    RESULT:
        Note Name = New
        Note Tags = #buy #car #house
        Note Text = I want to #buy new #car or maybe i want to #buy a #house
-----
"edit_note NAME TEXT" - Додає інформацію TEXT нотатку яка має ім'я NAME. Стару інформацію буде повністю видалено і заповнено новою.Залищиться лише ім'я
Приклад: edit_note New text My #dream - swim in the #storm
-----
"edit_note_name OLD_NAME NEW_NAME" - Змінює ім'я нотатки OLD_NAME на нове ім'я NEW_NAME
Приклад: edit_note_name New My_dream
-----
"search_in_notes VALUE" - Проводить пошук у всіх полях всіх нотаток згадки рядку VALUE
Приклад: search_in_note road - буде шукати всі нотатки в яких зустрічається це слово і повертати ВЕСЮ нотатку. Шукати буде у ВСІХ
полях, а не лише текст. Але якщо потрібно провести пошук САМЕ у тегах - використовуйте символ #
У разі успішного виконання повертає:
>>>Список співпадінь.
-----
"sorted_notes_by_tags TAG_1 TAG_2 TAG_3 ..."  - сортує книгу нотаток за кількістю співпадінь тегів нотаток з переданими тегами. Кількість тегів
не обмежена. Задавати теги для сортування треба з використанням символу #
Приклад: sorted_notes_by_tags #house #car #dream
У разі успішного виконання повертає:
    Список нотаток у яких є співпадіння хочаб з одним тегом. має бути щось типу
        "Співпадіння з тегами: 3
        Note Name: New
        Note tags: #house #car #dream
        Note text: My #dream - buy #car and #house

        "Співпадіння з тегами: 2
        Name: My_dream
        Note tags: #car #house
        Note text: I want to sell #car and #house
