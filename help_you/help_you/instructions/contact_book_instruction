"create_contact NAME" - Створює контакт з іменем NAME.
Приклад: create_contact Stas
У разі успішного виконання команди повертає:

У разі виникнення помилки, що контакт з цим ім'ям існує:

У разі виникнення помилки ще якоїсь:

-----
"show_contact_book" - Показує всі контакти які є в КонтактнійКнизі зі всією інформацією про кожен контакт.
Приклад: show_contact_book
Які тут можуть бути помилки? (питання до колег)
-----
"show_contact NAME" - Показує контакт, який має ім'я NAME. Всю інформацію що мається в цьому контакті.
Приклад: show_contact Stas
У разі успішного виконання повертає:
    Name: Stas
    phones: [x, y, s]
    emails: [x, y, s]
    address: [x, y, x]
    birthday: 25.06.1992
У разі якщо контакт з цим іменем не знайдено:

-----
"show_contact_page INT" - Виводить одну або кілька сторінок контактної книги. Кожна сторінка відображує певну кількість контактів і ця кількість
дорівнює INT. Якщо контактів у книзі менше або дорівнює INT - відобразить всі контакти однією сторінкою
Приклад: show_contacts_page 5
У разі успішного виконання повертає:
    Сторінки які містять П'ЯТЬ контактів в собі кожна.
Якщо INT при вводі не буде цілим числом виведе:

-----
"clear_contact_book" - Очистить контактну книгу, видалить всі контакти.
Приклад: clear_contact_book
Має питати чи впевнені Ви, що хочете видалити всі контакти? Y/N
У разі успішного виконання повертає:
-----
"delete_contact NAME": - Видаляє контакт який має ім'я NAME
Приклад: delete_contact Stas
У разі успішного виконання повертає:

У разі відсутності контакту з таким ім'ям повертає:

-----
"add_to_contact NAME FIELD VALUE" - Додає у контакт який має ім'я NAME інформацію VALUE у поле FIELD
Відповідність полей і приклади значень які вони приймають:
FIELD phones - номера телефонів (+380661112233). Саме з кодом країни загальною довжиною 12 цифр і тринадцятий символ це +
FIELD emails - імейли (aaaa.ssss@ddddd.com). Імейл може складатися з букв латинського алфавіту, цифр і символів ".-_" до знаку "собака", і лише
з буков і символу крапки "." після "собаки". остання група букв має бути НЕ меншою за ТРИ символи поспіль.
FIELD address - адреси ("Kharkov, Ivanova str, 40/32"). Особливих вимог не має. Зберігається як звичайний текст.
FIELD birthday - день народження(2222.12.25). Приймає данні у форматі рррр.мм.дд
FIELD note - нотатки ("#робота Я працюю з цим хлопцем"). Особливих вимог немає. Зберігається як текст. Слова помічені за допомогою # також додаються
в список тегів цього контакту.
Приклад: add_to_contact Stas emails aaa.ssss@ddddd.com
У разі успішного виконання повертає:

У разі помилки повертає:

-----
"edit_contact NAME FIELD OLD_VALUE NEW_VALUE" - Заміню OLD_VALUE на NEW_VALUE для контакту NAME у полі FIELD
FIELD phones - номера телефонів (+380661112233). Саме з кодом країни загальною довжиною 12 цифр і тринадцятий символ це +
FIELD emails - імейли (aaaa.ssss@ddddd.com). Імейл може складатися з букв латинського алфавіту, цифр і символів ".-_" до знаку "собака", і лише
з буков і символу крапки "." після "собаки". остання група букв має бути НЕ меншою за ТРИ символи поспіль.
FIELD address - адреси ("Kharkov, Ivanova str, 40/32"). Особливих вимог не має. Зберігається як звичайний текст.
FIELD birthday - день народження(2222.12.25). Приймає данні у форматі рррр.мм.дд
FIELD note - нотатки ("#робота Я працюю з цим хлопцем"). Особливих вимог немає. Зберігається як текст. Слова помічені за допомогою # також додаються
в список тегів цього контакту.
Приклад: edit_contact Stas phones +380501112233 +380667778899
У разі успішного виконання повертає:

У разі поилки повертає:

-----
"edit_contact_name OLD_NAME NEW_NAME" - Змінює ім'я контакту OLD_NAME на нове ім'я NEW_NAME
Приклад: edit_contact_name Stas Dima
У разі успішного виконання повертає:

У разі помилки повертає:

-----
"search_in_contacts VALUE" - Проводить пошук у всіх полях всіх контактів згадки рядку VALUE
Приклад: search_in_contacts aaa.ssss@dddd.com - буде шукати всі контакти в яких зустрічаєтся цей імейл і повертати ВЕСЬ контакт. Шукати буде у ВСІХ
полях, а не лише у імейл
У разі успішного виконання повертатиме:

У разі помилки поввертатиме:

-----
"sort_contacts_by_tags TAG_1 TAG_2 ..." - сортує контактну книгу за кількістю співпадінь тегів контакту з переданими тегами. Кількість тегів
не обмежена. Задавати теги для сортування треба з використанням символу #
Приклад: sort_contacts_by_tags #car #job #work #home
У разі успішного виконання повертає:
    Список контактів у яких є співпадіння хочаб з одним тегом. має бути щось типу
        "Співпадіння з тегами: 3
        Name: Stas
        Phones: [x, y, s]
        Emails: [x, y, x]
        Birthday: [x,, y, s]
        Note tags: #car #job #home
        Note text: TEXT"

        "Співпадіння з тегами: 2
        Name: Dima
        Phones: [x, y, s]
        Emails: [x, y, x]
        Birthday: [x,, y, s]
        Note tags: #car #home
        Note text: TEXT"
У разі помилки або відсутності співпадінь повертає:

-----
"show_birthdays INT" - Показує контакти у яких день народження протягом найближчих INT днів.
Приклад: show_birthdays 5
У разі успішного виконання поверне:
    Список контактів з повною інформацією у яких ДН протягом найближчих 5 днів
У разі помилки поверне:

-----
"days_to_birthday NAME" - Показує скільки днів залишилося до ДН контакту який має ім'я NAME
Приклад: days_to_birthday Dima
У разі успішного виконання поверне:

У разі помилки поверне:

-----
"show_days_to_birthday_for_all" - Поверне кількість днів до ДН для всіх контактів
Приклад: show_days_to_birthday_for_all
У разі успішного виконання поверне:
    Список який міститиме в собі ось такий рядок про кожен контакт:
    "Days to Stas's birthday: 228"

У разі помилки поверне:

